plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
}

apply from: "../klint.gradle"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.lek.parrot"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "com.lek.parrot.ParrotTestRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // JUnit 5 will bundle in files with identical paths; exclude them
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    sourceSets.forEach {
        it.java.srcDir("src/${it.name}/kotlin")
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // ----- Room DB ----- //
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // ----- WorkManager ----- //
    implementation "androidx.work:work-runtime-ktx:$workmanager_version"
    implementation "com.google.dagger:hilt-android:$daggerhilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$daggerhilt_version"

    // --- LifeCycle --- //

    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$daggerhilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$daggerhilt_version"

    // ----- Dagger Hilt For local unit tests ----- //
    testImplementation "com.google.dagger:hilt-android-testing:$daggerhilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$daggerhilt_version"

    // ----- JUNIT 5 ----- //
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"

    // --- Instrumentation Test --- //

    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$junut5_core_version"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$junit5_runner_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'

    // --- Espresso --- //
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test:runner:$androidx_runner_version"
    androidTestImplementation "androidx.test:rules:$androidx_runner_version"

    // ---- Logger ---- //
    implementation "com.jakewharton.timber:timber:$timber_version"
}

kapt {
    correctErrorTypes true
}

kapt {
    generateStubs = true
}